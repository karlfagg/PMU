//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace USRaceList.WageringService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToteLinkRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.WageringService.CancelRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.WageringService.InquireRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.WageringService.TicketRequest))]
    public partial class ToteLinkRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private USRaceList.WageringService.Source SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public USRaceList.WageringService.Source Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common")]
    [System.SerializableAttribute()]
    public partial struct Source : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string SystemIdField;
        
        private string SourceIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SystemId {
            get {
                return this.SystemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemIdField, value) != true)) {
                    this.SystemIdField = value;
                    this.RaisePropertyChanged("SystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIdField, value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager")]
    [System.SerializableAttribute()]
    public partial class CancelRequest : USRaceList.WageringService.ToteLinkRequest {
        
        private string TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewSessionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketIdField, value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ExternalAccountId {
            get {
                return this.ExternalAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountIdField, value) != true)) {
                    this.ExternalAccountIdField = value;
                    this.RaisePropertyChanged("ExternalAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public bool NewSession {
            get {
                return this.NewSessionField;
            }
            set {
                if ((this.NewSessionField.Equals(value) != true)) {
                    this.NewSessionField = value;
                    this.RaisePropertyChanged("NewSession");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquireRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager")]
    [System.SerializableAttribute()]
    public partial class InquireRequest : USRaceList.WageringService.ToteLinkRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketIdField, value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager")]
    [System.SerializableAttribute()]
    public partial class TicketRequest : USRaceList.WageringService.ToteLinkRequest {
        
        private string EventIdField;
        
        private int RaceIdField;
        
        private string CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParlayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartialField;
        
        private USRaceList.WageringService.Wagers WagersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewSessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToteErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToteErrorNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceId {
            get {
                return this.RaceIdField;
            }
            set {
                if ((this.RaceIdField.Equals(value) != true)) {
                    this.RaceIdField = value;
                    this.RaisePropertyChanged("RaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIdField, value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ExternalAccountId {
            get {
                return this.ExternalAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountIdField, value) != true)) {
                    this.ExternalAccountIdField = value;
                    this.RaisePropertyChanged("ExternalAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string PatronId {
            get {
                return this.PatronIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronIdField, value) != true)) {
                    this.PatronIdField = value;
                    this.RaisePropertyChanged("PatronId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public bool Parlay {
            get {
                return this.ParlayField;
            }
            set {
                if ((this.ParlayField.Equals(value) != true)) {
                    this.ParlayField = value;
                    this.RaisePropertyChanged("Parlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public bool Partial {
            get {
                return this.PartialField;
            }
            set {
                if ((this.PartialField.Equals(value) != true)) {
                    this.PartialField = value;
                    this.RaisePropertyChanged("Partial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public USRaceList.WageringService.Wagers Wagers {
            get {
                return this.WagersField;
            }
            set {
                if ((object.ReferenceEquals(this.WagersField, value) != true)) {
                    this.WagersField = value;
                    this.RaisePropertyChanged("Wagers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public bool NewSession {
            get {
                return this.NewSessionField;
            }
            set {
                if ((this.NewSessionField.Equals(value) != true)) {
                    this.NewSessionField = value;
                    this.RaisePropertyChanged("NewSession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string ToteError {
            get {
                return this.ToteErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ToteErrorField, value) != true)) {
                    this.ToteErrorField = value;
                    this.RaisePropertyChanged("ToteError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string ToteErrorNumber {
            get {
                return this.ToteErrorNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ToteErrorNumberField, value) != true)) {
                    this.ToteErrorNumberField = value;
                    this.RaisePropertyChanged("ToteErrorNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Wagers", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager", ItemName="Wager")]
    [System.SerializableAttribute()]
    public class Wagers : System.Collections.Generic.List<USRaceList.WageringService.Wager> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wager", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    [System.SerializableAttribute()]
    public partial class Wager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoolIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BaseAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<USRaceList.WageringService.WagerModifier> ModifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Legs LegsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SurchargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FractionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Error ErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> RaceId {
            get {
                return this.RaceIdField;
            }
            set {
                if ((this.RaceIdField.Equals(value) != true)) {
                    this.RaceIdField = value;
                    this.RaisePropertyChanged("RaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string PoolId {
            get {
                return this.PoolIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PoolIdField, value) != true)) {
                    this.PoolIdField = value;
                    this.RaisePropertyChanged("PoolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Nullable<decimal> BaseAmount {
            get {
                return this.BaseAmountField;
            }
            set {
                if ((this.BaseAmountField.Equals(value) != true)) {
                    this.BaseAmountField = value;
                    this.RaisePropertyChanged("BaseAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Nullable<USRaceList.WageringService.WagerModifier> Modifier {
            get {
                return this.ModifierField;
            }
            set {
                if ((this.ModifierField.Equals(value) != true)) {
                    this.ModifierField = value;
                    this.RaisePropertyChanged("Modifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public USRaceList.WageringService.Legs Legs {
            get {
                return this.LegsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegsField, value) != true)) {
                    this.LegsField = value;
                    this.RaisePropertyChanged("Legs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Nullable<int> Bets {
            get {
                return this.BetsField;
            }
            set {
                if ((this.BetsField.Equals(value) != true)) {
                    this.BetsField = value;
                    this.RaisePropertyChanged("Bets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Nullable<decimal> Surcharge {
            get {
                return this.SurchargeField;
            }
            set {
                if ((this.SurchargeField.Equals(value) != true)) {
                    this.SurchargeField = value;
                    this.RaisePropertyChanged("Surcharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Nullable<decimal> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Nullable<int> Quick {
            get {
                return this.QuickField;
            }
            set {
                if ((this.QuickField.Equals(value) != true)) {
                    this.QuickField = value;
                    this.RaisePropertyChanged("Quick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public bool Only {
            get {
                return this.OnlyField;
            }
            set {
                if ((this.OnlyField.Equals(value) != true)) {
                    this.OnlyField = value;
                    this.RaisePropertyChanged("Only");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public bool Fractional {
            get {
                return this.FractionalField;
            }
            set {
                if ((this.FractionalField.Equals(value) != true)) {
                    this.FractionalField = value;
                    this.RaisePropertyChanged("Fractional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public USRaceList.WageringService.Error Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((this.ErrorField.Equals(value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common")]
    [System.SerializableAttribute()]
    public partial struct Error : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ParamsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string[] Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WagerModifier", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    public enum WagerModifier : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wheel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Box = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PowerBox = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Leading = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeyWheel = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeyBox = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Legs", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager", ItemName="Leg")]
    [System.SerializableAttribute()]
    public class Legs : System.Collections.Generic.List<USRaceList.WageringService.Leg> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Leg", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    [System.SerializableAttribute()]
    public partial class Leg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunnersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Auto {
            get {
                return this.AutoField;
            }
            set {
                if ((this.AutoField.Equals(value) != true)) {
                    this.AutoField = value;
                    this.RaisePropertyChanged("Auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Runners {
            get {
                return this.RunnersField;
            }
            set {
                if ((object.ReferenceEquals(this.RunnersField, value) != true)) {
                    this.RunnersField = value;
                    this.RaisePropertyChanged("Runners");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToteLinkResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.WageringService.CancelResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.WageringService.InquireResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.WageringService.TicketResponse))]
    public partial class ToteLinkResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Error ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Source SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RunId {
            get {
                return this.RunIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RunIdField, value) != true)) {
                    this.RunIdField = value;
                    this.RaisePropertyChanged("RunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIdField, value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public USRaceList.WageringService.Error Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((this.ErrorField.Equals(value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public USRaceList.WageringService.Source Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager")]
    [System.SerializableAttribute()]
    public partial class CancelResponse : USRaceList.WageringService.ToteLinkResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Payoff PayoffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CaptureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClaimedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoucherField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public USRaceList.WageringService.Payoff Payoff {
            get {
                return this.PayoffField;
            }
            set {
                if ((object.ReferenceEquals(this.PayoffField, value) != true)) {
                    this.PayoffField = value;
                    this.RaisePropertyChanged("Payoff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ExternalAccountId {
            get {
                return this.ExternalAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountIdField, value) != true)) {
                    this.ExternalAccountIdField = value;
                    this.RaisePropertyChanged("ExternalAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIdField, value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketIdField, value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Nullable<decimal> Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public bool Capture {
            get {
                return this.CaptureField;
            }
            set {
                if ((this.CaptureField.Equals(value) != true)) {
                    this.CaptureField = value;
                    this.RaisePropertyChanged("Capture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public bool Claimed {
            get {
                return this.ClaimedField;
            }
            set {
                if ((this.ClaimedField.Equals(value) != true)) {
                    this.ClaimedField = value;
                    this.RaisePropertyChanged("Claimed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public bool Voucher {
            get {
                return this.VoucherField;
            }
            set {
                if ((this.VoucherField.Equals(value) != true)) {
                    this.VoucherField = value;
                    this.RaisePropertyChanged("Voucher");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InquireResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager")]
    [System.SerializableAttribute()]
    public partial class InquireResponse : USRaceList.WageringService.ToteLinkResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Ticket TicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public USRaceList.WageringService.Ticket Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager")]
    [System.SerializableAttribute()]
    public partial class TicketResponse : USRaceList.WageringService.ToteLinkResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Wagers WagersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CouponsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SurchargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpirationField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketIdField, value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string SecurityCode {
            get {
                return this.SecurityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCodeField, value) != true)) {
                    this.SecurityCodeField = value;
                    this.RaisePropertyChanged("SecurityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public int RaceId {
            get {
                return this.RaceIdField;
            }
            set {
                if ((this.RaceIdField.Equals(value) != true)) {
                    this.RaceIdField = value;
                    this.RaisePropertyChanged("RaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Nullable<decimal> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIdField, value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public USRaceList.WageringService.Wagers Wagers {
            get {
                return this.WagersField;
            }
            set {
                if ((object.ReferenceEquals(this.WagersField, value) != true)) {
                    this.WagersField = value;
                    this.RaisePropertyChanged("Wagers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Nullable<decimal> Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string ExternalAccountId {
            get {
                return this.ExternalAccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAccountIdField, value) != true)) {
                    this.ExternalAccountIdField = value;
                    this.RaisePropertyChanged("ExternalAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public System.Nullable<int> Coupons {
            get {
                return this.CouponsField;
            }
            set {
                if ((this.CouponsField.Equals(value) != true)) {
                    this.CouponsField = value;
                    this.RaisePropertyChanged("Coupons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public System.Nullable<decimal> Surcharge {
            get {
                return this.SurchargeField;
            }
            set {
                if ((this.SurchargeField.Equals(value) != true)) {
                    this.SurchargeField = value;
                    this.RaisePropertyChanged("Surcharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string Expiration {
            get {
                return this.ExpirationField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpirationField, value) != true)) {
                    this.ExpirationField = value;
                    this.RaisePropertyChanged("Expiration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payoff", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    [System.SerializableAttribute()]
    public partial class Payoff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Taxes TaxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Exchange ExchangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceIdField;
        
        private string CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> NetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> GrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RefundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CancelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SurchargeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public USRaceList.WageringService.Taxes Taxes {
            get {
                return this.TaxesField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxesField, value) != true)) {
                    this.TaxesField = value;
                    this.RaisePropertyChanged("Taxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public USRaceList.WageringService.Exchange Exchange {
            get {
                return this.ExchangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExchangeField, value) != true)) {
                    this.ExchangeField = value;
                    this.RaisePropertyChanged("Exchange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Nullable<System.DateTime> Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIdField, value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIdField, value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Nullable<decimal> Net {
            get {
                return this.NetField;
            }
            set {
                if ((this.NetField.Equals(value) != true)) {
                    this.NetField = value;
                    this.RaisePropertyChanged("Net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Nullable<decimal> Gross {
            get {
                return this.GrossField;
            }
            set {
                if ((this.GrossField.Equals(value) != true)) {
                    this.GrossField = value;
                    this.RaisePropertyChanged("Gross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Nullable<decimal> Refund {
            get {
                return this.RefundField;
            }
            set {
                if ((this.RefundField.Equals(value) != true)) {
                    this.RefundField = value;
                    this.RaisePropertyChanged("Refund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public bool Pending {
            get {
                return this.PendingField;
            }
            set {
                if ((this.PendingField.Equals(value) != true)) {
                    this.PendingField = value;
                    this.RaisePropertyChanged("Pending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public bool Cancel {
            get {
                return this.CancelField;
            }
            set {
                if ((this.CancelField.Equals(value) != true)) {
                    this.CancelField = value;
                    this.RaisePropertyChanged("Cancel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public bool Credit {
            get {
                return this.CreditField;
            }
            set {
                if ((this.CreditField.Equals(value) != true)) {
                    this.CreditField = value;
                    this.RaisePropertyChanged("Credit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public System.Nullable<decimal> Surcharge {
            get {
                return this.SurchargeField;
            }
            set {
                if ((this.SurchargeField.Equals(value) != true)) {
                    this.SurchargeField = value;
                    this.RaisePropertyChanged("Surcharge");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exchange", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    [System.SerializableAttribute()]
    public partial class Exchange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EventIdField;
        
        private int RaceIdField;
        
        private string PoolIdField;
        
        private decimal ExchangeAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceId {
            get {
                return this.RaceIdField;
            }
            set {
                if ((this.RaceIdField.Equals(value) != true)) {
                    this.RaceIdField = value;
                    this.RaisePropertyChanged("RaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string PoolId {
            get {
                return this.PoolIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PoolIdField, value) != true)) {
                    this.PoolIdField = value;
                    this.RaisePropertyChanged("PoolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public decimal ExchangeAmount {
            get {
                return this.ExchangeAmountField;
            }
            set {
                if ((this.ExchangeAmountField.Equals(value) != true)) {
                    this.ExchangeAmountField = value;
                    this.RaisePropertyChanged("ExchangeAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Taxes", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager", ItemName="Tax")]
    [System.SerializableAttribute()]
    public class Taxes : System.Collections.Generic.List<USRaceList.WageringService.Tax> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tax", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    [System.SerializableAttribute()]
    public partial class Tax : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TaxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TaxAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SpecialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string TaxName {
            get {
                return this.TaxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxNameField, value) != true)) {
                    this.TaxNameField = value;
                    this.RaisePropertyChanged("TaxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<decimal> Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Nullable<decimal> TaxAmount {
            get {
                return this.TaxAmountField;
            }
            set {
                if ((this.TaxAmountField.Equals(value) != true)) {
                    this.TaxAmountField = value;
                    this.RaisePropertyChanged("TaxAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public bool Special {
            get {
                return this.SpecialField;
            }
            set {
                if ((this.SpecialField.Equals(value) != true)) {
                    this.SpecialField = value;
                    this.RaisePropertyChanged("Special");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private USRaceList.WageringService.Sale SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Payoff PayoffField;
        
        private string TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParlayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SurchargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EventTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerformanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public USRaceList.WageringService.Sale Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleField, value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public USRaceList.WageringService.Payoff Payoff {
            get {
                return this.PayoffField;
            }
            set {
                if ((object.ReferenceEquals(this.PayoffField, value) != true)) {
                    this.PayoffField = value;
                    this.RaisePropertyChanged("Payoff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketIdField, value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string PatronId {
            get {
                return this.PatronIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronIdField, value) != true)) {
                    this.PatronIdField = value;
                    this.RaisePropertyChanged("PatronId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public bool Parlay {
            get {
                return this.ParlayField;
            }
            set {
                if ((this.ParlayField.Equals(value) != true)) {
                    this.ParlayField = value;
                    this.RaisePropertyChanged("Parlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Nullable<decimal> Surcharge {
            get {
                return this.SurchargeField;
            }
            set {
                if ((this.SurchargeField.Equals(value) != true)) {
                    this.SurchargeField = value;
                    this.RaisePropertyChanged("Surcharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Nullable<decimal> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public int RaceId {
            get {
                return this.RaceIdField;
            }
            set {
                if ((this.RaceIdField.Equals(value) != true)) {
                    this.RaceIdField = value;
                    this.RaisePropertyChanged("RaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string EventInfo {
            get {
                return this.EventInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.EventInfoField, value) != true)) {
                    this.EventInfoField = value;
                    this.RaisePropertyChanged("EventInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public System.Nullable<System.DateTime> EventTime {
            get {
                return this.EventTimeField;
            }
            set {
                if ((this.EventTimeField.Equals(value) != true)) {
                    this.EventTimeField = value;
                    this.RaisePropertyChanged("EventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string Performance {
            get {
                return this.PerformanceField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformanceField, value) != true)) {
                    this.PerformanceField = value;
                    this.RaisePropertyChanged("Performance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public bool Outs {
            get {
                return this.OutsField;
            }
            set {
                if ((this.OutsField.Equals(value) != true)) {
                    this.OutsField = value;
                    this.RaisePropertyChanged("Outs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIdField, value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sale", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common/Wager")]
    [System.SerializableAttribute()]
    public partial class Sale : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.Wagers WagersField;
        
        private string SourceIdField;
        
        private string CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public USRaceList.WageringService.Wagers Wagers {
            get {
                return this.WagersField;
            }
            set {
                if ((object.ReferenceEquals(this.WagersField, value) != true)) {
                    this.WagersField = value;
                    this.RaisePropertyChanged("Wagers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIdField, value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIdField, value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool NotCurrent {
            get {
                return this.NotCurrentField;
            }
            set {
                if ((this.NotCurrentField.Equals(value) != true)) {
                    this.NotCurrentField = value;
                    this.RaisePropertyChanged("NotCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ReferenceId {
            get {
                return this.ReferenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceIdField, value) != true)) {
                    this.ReferenceIdField = value;
                    this.RaisePropertyChanged("ReferenceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
    [System.SerializableAttribute()]
    public partial class ValidationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.WageringService.ValidationDetail[] DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRaceList.WageringService.ValidationDetail[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationDetail", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Practices.EnterpriseLibrary.Val" +
        "idation.Integration.WCF")]
    [System.SerializableAttribute()]
    public partial class ValidationDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager", ConfigurationName="WageringService.Wagering")]
    public interface Wagering {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://schema.unitedtote.com/ToteLink/2008/06/Common) of message KeepaliveRequest does not match the default value (http://schema.unitedtote.com/ToteLink/2008/06/Wager)
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Common/Keepalive/Keepalive", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Common/Keepalive/KeepaliveResponse")]
        USRaceList.WageringService.KeepaliveResponse Keepalive(USRaceList.WageringService.KeepaliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Common/Keepalive/Keepalive", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Common/Keepalive/KeepaliveResponse")]
        System.Threading.Tasks.Task<USRaceList.WageringService.KeepaliveResponse> KeepaliveAsync(USRaceList.WageringService.KeepaliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/IssueTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/IssueTicketResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.WageringService.ValidationFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/IssueTicketValidatio" +
            "nFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="TicketResponse")]
        USRaceList.WageringService.TicketResponse IssueTicket(USRaceList.WageringService.TicketRequest TicketRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/IssueTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/IssueTicketResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="TicketResponse")]
        System.Threading.Tasks.Task<USRaceList.WageringService.TicketResponse> IssueTicketAsync(USRaceList.WageringService.TicketRequest TicketRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/ValidateTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/ValidateTicketRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.WageringService.ValidationFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/ValidateTicketValida" +
            "tionFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        USRaceList.WageringService.ValidateTicketResponse ValidateTicket(USRaceList.WageringService.ValidateTicketRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/ValidateTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/ValidateTicketRespon" +
            "se")]
        System.Threading.Tasks.Task<USRaceList.WageringService.ValidateTicketResponse> ValidateTicketAsync(USRaceList.WageringService.ValidateTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/CancelTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/CancelTicketResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.WageringService.ValidationFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/CancelTicketValidati" +
            "onFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CancelResponse")]
        USRaceList.WageringService.CancelResponse CancelTicket(USRaceList.WageringService.CancelRequest CancelRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/CancelTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/CancelTicketResponse" +
            "")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="CancelResponse")]
        System.Threading.Tasks.Task<USRaceList.WageringService.CancelResponse> CancelTicketAsync(USRaceList.WageringService.CancelRequest CancelRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/InquireTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/InquireTicketRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.WageringService.ValidationFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/InquireTicketValidat" +
            "ionFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="InquireResponse")]
        USRaceList.WageringService.InquireResponse InquireTicket(USRaceList.WageringService.InquireRequest InquireRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/InquireTicket", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Wager/Wagering/InquireTicketRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="InquireResponse")]
        System.Threading.Tasks.Task<USRaceList.WageringService.InquireResponse> InquireTicketAsync(USRaceList.WageringService.InquireRequest InquireRequest);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Keepalive", WrapperNamespace="http://schema.unitedtote.com/ToteLink/2008/06/Common", IsWrapped=true)]
    public partial class KeepaliveRequest {
        
        public KeepaliveRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeepaliveResponse", WrapperNamespace="http://schema.unitedtote.com/ToteLink/2008/06/Common", IsWrapped=true)]
    public partial class KeepaliveResponse {
        
        public KeepaliveResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTicket", WrapperNamespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager", IsWrapped=true)]
    public partial class ValidateTicketRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager", Order=0)]
        public USRaceList.WageringService.TicketRequest TicketRequest;
        
        public ValidateTicketRequest() {
        }
        
        public ValidateTicketRequest(USRaceList.WageringService.TicketRequest TicketRequest) {
            this.TicketRequest = TicketRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTicketResponse", WrapperNamespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager", IsWrapped=true)]
    public partial class ValidateTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Wager", Order=0)]
        public USRaceList.WageringService.TicketRequest TicketRequest;
        
        public ValidateTicketResponse() {
        }
        
        public ValidateTicketResponse(USRaceList.WageringService.TicketRequest TicketRequest) {
            this.TicketRequest = TicketRequest;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WageringChannel : USRaceList.WageringService.Wagering, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WageringClient : System.ServiceModel.ClientBase<USRaceList.WageringService.Wagering>, USRaceList.WageringService.Wagering {
        
        public WageringClient() {
        }
        
        public WageringClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WageringClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WageringClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WageringClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        USRaceList.WageringService.KeepaliveResponse USRaceList.WageringService.Wagering.Keepalive(USRaceList.WageringService.KeepaliveRequest request) {
            return base.Channel.Keepalive(request);
        }
        
        public void Keepalive() {
            USRaceList.WageringService.KeepaliveRequest inValue = new USRaceList.WageringService.KeepaliveRequest();
            USRaceList.WageringService.KeepaliveResponse retVal = ((USRaceList.WageringService.Wagering)(this)).Keepalive(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<USRaceList.WageringService.KeepaliveResponse> USRaceList.WageringService.Wagering.KeepaliveAsync(USRaceList.WageringService.KeepaliveRequest request) {
            return base.Channel.KeepaliveAsync(request);
        }
        
        public System.Threading.Tasks.Task<USRaceList.WageringService.KeepaliveResponse> KeepaliveAsync() {
            USRaceList.WageringService.KeepaliveRequest inValue = new USRaceList.WageringService.KeepaliveRequest();
            return ((USRaceList.WageringService.Wagering)(this)).KeepaliveAsync(inValue);
        }
        
        public USRaceList.WageringService.TicketResponse IssueTicket(USRaceList.WageringService.TicketRequest TicketRequest) {
            return base.Channel.IssueTicket(TicketRequest);
        }
        
        public System.Threading.Tasks.Task<USRaceList.WageringService.TicketResponse> IssueTicketAsync(USRaceList.WageringService.TicketRequest TicketRequest) {
            return base.Channel.IssueTicketAsync(TicketRequest);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        USRaceList.WageringService.ValidateTicketResponse USRaceList.WageringService.Wagering.ValidateTicket(USRaceList.WageringService.ValidateTicketRequest request) {
            return base.Channel.ValidateTicket(request);
        }
        
        public void ValidateTicket(ref USRaceList.WageringService.TicketRequest TicketRequest) {
            USRaceList.WageringService.ValidateTicketRequest inValue = new USRaceList.WageringService.ValidateTicketRequest();
            inValue.TicketRequest = TicketRequest;
            USRaceList.WageringService.ValidateTicketResponse retVal = ((USRaceList.WageringService.Wagering)(this)).ValidateTicket(inValue);
            TicketRequest = retVal.TicketRequest;
        }
        
        public System.Threading.Tasks.Task<USRaceList.WageringService.ValidateTicketResponse> ValidateTicketAsync(USRaceList.WageringService.ValidateTicketRequest request) {
            return base.Channel.ValidateTicketAsync(request);
        }
        
        public USRaceList.WageringService.CancelResponse CancelTicket(USRaceList.WageringService.CancelRequest CancelRequest) {
            return base.Channel.CancelTicket(CancelRequest);
        }
        
        public System.Threading.Tasks.Task<USRaceList.WageringService.CancelResponse> CancelTicketAsync(USRaceList.WageringService.CancelRequest CancelRequest) {
            return base.Channel.CancelTicketAsync(CancelRequest);
        }
        
        public USRaceList.WageringService.InquireResponse InquireTicket(USRaceList.WageringService.InquireRequest InquireRequest) {
            return base.Channel.InquireTicket(InquireRequest);
        }
        
        public System.Threading.Tasks.Task<USRaceList.WageringService.InquireResponse> InquireTicketAsync(USRaceList.WageringService.InquireRequest InquireRequest) {
            return base.Channel.InquireTicketAsync(InquireRequest);
        }
    }
}
