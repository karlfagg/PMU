//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace USRaceList.ProgramService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToteLinkRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.ProgramService.EventDetailRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.ProgramService.RaceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.ProgramService.EventsRequest))]
    public partial class ToteLinkRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private USRaceList.ProgramService.Source SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public USRaceList.ProgramService.Source Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common")]
    [System.SerializableAttribute()]
    public partial struct Source : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string SystemIdField;
        
        private string SourceIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SystemId {
            get {
                return this.SystemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemIdField, value) != true)) {
                    this.SystemIdField = value;
                    this.RaisePropertyChanged("SystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIdField, value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDetailRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class EventDetailRequest : USRaceList.ProgramService.ToteLinkRequest {
        
        private string EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TournamentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PoolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunnersField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TournamentId {
            get {
                return this.TournamentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TournamentIdField, value) != true)) {
                    this.TournamentIdField = value;
                    this.RaisePropertyChanged("TournamentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ContestId {
            get {
                return this.ContestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContestIdField, value) != true)) {
                    this.ContestIdField = value;
                    this.RaisePropertyChanged("ContestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public bool Program {
            get {
                return this.ProgramField;
            }
            set {
                if ((this.ProgramField.Equals(value) != true)) {
                    this.ProgramField = value;
                    this.RaisePropertyChanged("Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool Races {
            get {
                return this.RacesField;
            }
            set {
                if ((this.RacesField.Equals(value) != true)) {
                    this.RacesField = value;
                    this.RaisePropertyChanged("Races");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public bool Pools {
            get {
                return this.PoolsField;
            }
            set {
                if ((this.PoolsField.Equals(value) != true)) {
                    this.PoolsField = value;
                    this.RaisePropertyChanged("Pools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public bool Runners {
            get {
                return this.RunnersField;
            }
            set {
                if ((this.RunnersField.Equals(value) != true)) {
                    this.RunnersField = value;
                    this.RaisePropertyChanged("Runners");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class RaceRequest : USRaceList.ProgramService.ToteLinkRequest {
        
        private string EventIdField;
        
        private int RaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TournamentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PoolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunnersField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceId {
            get {
                return this.RaceIdField;
            }
            set {
                if ((this.RaceIdField.Equals(value) != true)) {
                    this.RaceIdField = value;
                    this.RaisePropertyChanged("RaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TournamentId {
            get {
                return this.TournamentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TournamentIdField, value) != true)) {
                    this.TournamentIdField = value;
                    this.RaisePropertyChanged("TournamentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ContestId {
            get {
                return this.ContestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContestIdField, value) != true)) {
                    this.ContestIdField = value;
                    this.RaisePropertyChanged("ContestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool Program {
            get {
                return this.ProgramField;
            }
            set {
                if ((this.ProgramField.Equals(value) != true)) {
                    this.ProgramField = value;
                    this.RaisePropertyChanged("Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public bool Pools {
            get {
                return this.PoolsField;
            }
            set {
                if ((this.PoolsField.Equals(value) != true)) {
                    this.PoolsField = value;
                    this.RaisePropertyChanged("Pools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public bool Runners {
            get {
                return this.RunnersField;
            }
            set {
                if ((this.RunnersField.Equals(value) != true)) {
                    this.RunnersField = value;
                    this.RaisePropertyChanged("Runners");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventsRequest", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class EventsRequest : USRaceList.ProgramService.ToteLinkRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TournamentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RacesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TournamentId {
            get {
                return this.TournamentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TournamentIdField, value) != true)) {
                    this.TournamentIdField = value;
                    this.RaisePropertyChanged("TournamentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ContestId {
            get {
                return this.ContestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContestIdField, value) != true)) {
                    this.ContestIdField = value;
                    this.RaisePropertyChanged("ContestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public bool Races {
            get {
                return this.RacesField;
            }
            set {
                if ((this.RacesField.Equals(value) != true)) {
                    this.RacesField = value;
                    this.RaisePropertyChanged("Races");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToteLinkResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.ProgramService.EventDetailResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.ProgramService.RaceResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(USRaceList.ProgramService.EventsResponse))]
    public partial class ToteLinkResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.Source SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RunId {
            get {
                return this.RunIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RunIdField, value) != true)) {
                    this.RunIdField = value;
                    this.RaisePropertyChanged("RunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIdField, value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public USRaceList.ProgramService.Source Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventDetailResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class EventDetailResponse : USRaceList.ProgramService.ToteLinkResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TournamentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContestIdField;
        
        private USRaceList.ProgramService.Event EventDetailField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TournamentId {
            get {
                return this.TournamentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TournamentIdField, value) != true)) {
                    this.TournamentIdField = value;
                    this.RaisePropertyChanged("TournamentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ContestId {
            get {
                return this.ContestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContestIdField, value) != true)) {
                    this.ContestIdField = value;
                    this.RaisePropertyChanged("ContestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public USRaceList.ProgramService.Event EventDetail {
            get {
                return this.EventDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDetailField, value) != true)) {
                    this.EventDetailField = value;
                    this.RaisePropertyChanged("EventDetail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class RaceResponse : USRaceList.ProgramService.ToteLinkResponse {
        
        private string EventIdField;
        
        private USRaceList.ProgramService.Race RaceField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public USRaceList.ProgramService.Race Race {
            get {
                return this.RaceField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceField, value) != true)) {
                    this.RaceField = value;
                    this.RaisePropertyChanged("Race");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventsResponse", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class EventsResponse : USRaceList.ProgramService.ToteLinkResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TournamentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContestIdField;
        
        private USRaceList.ProgramService.Events EventsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TournamentId {
            get {
                return this.TournamentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TournamentIdField, value) != true)) {
                    this.TournamentIdField = value;
                    this.RaisePropertyChanged("TournamentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ContestId {
            get {
                return this.ContestIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContestIdField, value) != true)) {
                    this.ContestIdField = value;
                    this.RaisePropertyChanged("ContestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public USRaceList.ProgramService.Events Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Events", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ItemName="Event")]
    [System.SerializableAttribute()]
    public class Events : System.Collections.Generic.List<USRaceList.ProgramService.Event> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.Races RacesField;
        
        private string EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackConditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TurfTrackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<USRaceList.ProgramService.EventType> EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<USRaceList.ProgramService.TrackType> TrackTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParlayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaceListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public USRaceList.ProgramService.Races Races {
            get {
                return this.RacesField;
            }
            set {
                if ((object.ReferenceEquals(this.RacesField, value) != true)) {
                    this.RacesField = value;
                    this.RaisePropertyChanged("Races");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EventIdField, value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string RunId {
            get {
                return this.RunIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RunIdField, value) != true)) {
                    this.RunIdField = value;
                    this.RaisePropertyChanged("RunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string TrackId {
            get {
                return this.TrackIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackIdField, value) != true)) {
                    this.TrackIdField = value;
                    this.RaisePropertyChanged("TrackId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string TrackName {
            get {
                return this.TrackNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackNameField, value) != true)) {
                    this.TrackNameField = value;
                    this.RaisePropertyChanged("TrackName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string TrackCondition {
            get {
                return this.TrackConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackConditionField, value) != true)) {
                    this.TrackConditionField = value;
                    this.RaisePropertyChanged("TrackCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string TurfTrack {
            get {
                return this.TurfTrackField;
            }
            set {
                if ((object.ReferenceEquals(this.TurfTrackField, value) != true)) {
                    this.TurfTrackField = value;
                    this.RaisePropertyChanged("TurfTrack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.DateTime EventTime {
            get {
                return this.EventTimeField;
            }
            set {
                if ((this.EventTimeField.Equals(value) != true)) {
                    this.EventTimeField = value;
                    this.RaisePropertyChanged("EventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string EventInfo {
            get {
                return this.EventInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.EventInfoField, value) != true)) {
                    this.EventInfoField = value;
                    this.RaisePropertyChanged("EventInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public System.Nullable<USRaceList.ProgramService.EventType> EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public System.Nullable<USRaceList.ProgramService.TrackType> TrackType {
            get {
                return this.TrackTypeField;
            }
            set {
                if ((this.TrackTypeField.Equals(value) != true)) {
                    this.TrackTypeField = value;
                    this.RaisePropertyChanged("TrackType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string EventClass {
            get {
                return this.EventClassField;
            }
            set {
                if ((object.ReferenceEquals(this.EventClassField, value) != true)) {
                    this.EventClassField = value;
                    this.RaisePropertyChanged("EventClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIdField, value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public bool Parlay {
            get {
                return this.ParlayField;
            }
            set {
                if ((this.ParlayField.Equals(value) != true)) {
                    this.ParlayField = value;
                    this.RaisePropertyChanged("Parlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string EventStatus {
            get {
                return this.EventStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EventStatusField, value) != true)) {
                    this.EventStatusField = value;
                    this.RaisePropertyChanged("EventStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string RaceList {
            get {
                return this.RaceListField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceListField, value) != true)) {
                    this.RaceListField = value;
                    this.RaisePropertyChanged("RaceList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Races", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ItemName="Race")]
    [System.SerializableAttribute()]
    public class Races : System.Collections.Generic.List<USRaceList.ProgramService.Race> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventType", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    public enum EventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Current = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Future = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackType", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    public enum TrackType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JaiAlai = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thoroughbred = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Greyhound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quarterhorse = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Harness = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arabian = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mixed = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cycle = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boat = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vehicle = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sports = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Race", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class Race : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.Pools PoolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.Runners RunnersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.RaceChanges RaceChangesField;
        
        private int RaceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<USRaceList.ProgramService.RaceStatus> RaceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<USRaceList.ProgramService.TrackType> TrackTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PostTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfRunnersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OddsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurfaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoolListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public USRaceList.ProgramService.Pools Pools {
            get {
                return this.PoolsField;
            }
            set {
                if ((object.ReferenceEquals(this.PoolsField, value) != true)) {
                    this.PoolsField = value;
                    this.RaisePropertyChanged("Pools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public USRaceList.ProgramService.Runners Runners {
            get {
                return this.RunnersField;
            }
            set {
                if ((object.ReferenceEquals(this.RunnersField, value) != true)) {
                    this.RunnersField = value;
                    this.RaisePropertyChanged("Runners");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public USRaceList.ProgramService.RaceChanges RaceChanges {
            get {
                return this.RaceChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceChangesField, value) != true)) {
                    this.RaceChangesField = value;
                    this.RaisePropertyChanged("RaceChanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int RaceId {
            get {
                return this.RaceIdField;
            }
            set {
                if ((this.RaceIdField.Equals(value) != true)) {
                    this.RaceIdField = value;
                    this.RaisePropertyChanged("RaceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Nullable<USRaceList.ProgramService.RaceStatus> RaceStatus {
            get {
                return this.RaceStatusField;
            }
            set {
                if ((this.RaceStatusField.Equals(value) != true)) {
                    this.RaceStatusField = value;
                    this.RaisePropertyChanged("RaceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Nullable<USRaceList.ProgramService.TrackType> TrackType {
            get {
                return this.TrackTypeField;
            }
            set {
                if ((this.TrackTypeField.Equals(value) != true)) {
                    this.TrackTypeField = value;
                    this.RaisePropertyChanged("TrackType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public bool Current {
            get {
                return this.CurrentField;
            }
            set {
                if ((this.CurrentField.Equals(value) != true)) {
                    this.CurrentField = value;
                    this.RaisePropertyChanged("Current");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Nullable<System.DateTime> PostTime {
            get {
                return this.PostTimeField;
            }
            set {
                if ((this.PostTimeField.Equals(value) != true)) {
                    this.PostTimeField = value;
                    this.RaisePropertyChanged("PostTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public int NumberOfRunners {
            get {
                return this.NumberOfRunnersField;
            }
            set {
                if ((this.NumberOfRunnersField.Equals(value) != true)) {
                    this.NumberOfRunnersField = value;
                    this.RaisePropertyChanged("NumberOfRunners");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string Finish {
            get {
                return this.FinishField;
            }
            set {
                if ((object.ReferenceEquals(this.FinishField, value) != true)) {
                    this.FinishField = value;
                    this.RaisePropertyChanged("Finish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public bool Program {
            get {
                return this.ProgramField;
            }
            set {
                if ((this.ProgramField.Equals(value) != true)) {
                    this.ProgramField = value;
                    this.RaisePropertyChanged("Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public bool Odds {
            get {
                return this.OddsField;
            }
            set {
                if ((this.OddsField.Equals(value) != true)) {
                    this.OddsField = value;
                    this.RaisePropertyChanged("Odds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string RaceType {
            get {
                return this.RaceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceTypeField, value) != true)) {
                    this.RaceTypeField = value;
                    this.RaisePropertyChanged("RaceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string Surface {
            get {
                return this.SurfaceField;
            }
            set {
                if ((object.ReferenceEquals(this.SurfaceField, value) != true)) {
                    this.SurfaceField = value;
                    this.RaisePropertyChanged("Surface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((object.ReferenceEquals(this.DistanceField, value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public decimal Purse {
            get {
                return this.PurseField;
            }
            set {
                if ((this.PurseField.Equals(value) != true)) {
                    this.PurseField = value;
                    this.RaisePropertyChanged("Purse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public decimal Claim {
            get {
                return this.ClaimField;
            }
            set {
                if ((this.ClaimField.Equals(value) != true)) {
                    this.ClaimField = value;
                    this.RaisePropertyChanged("Claim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=20)]
        public string Live {
            get {
                return this.LiveField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveField, value) != true)) {
                    this.LiveField = value;
                    this.RaisePropertyChanged("Live");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public string PoolList {
            get {
                return this.PoolListField;
            }
            set {
                if ((object.ReferenceEquals(this.PoolListField, value) != true)) {
                    this.PoolListField = value;
                    this.RaisePropertyChanged("PoolList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Pools", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ItemName="Pool")]
    [System.SerializableAttribute()]
    public class Pools : System.Collections.Generic.List<USRaceList.ProgramService.Pool> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Runners", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ItemName="Runner")]
    [System.SerializableAttribute()]
    public class Runners : System.Collections.Generic.List<USRaceList.ProgramService.Runner> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RaceChanges", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ItemName="Change")]
    [System.SerializableAttribute()]
    public class RaceChanges : System.Collections.Generic.List<USRaceList.ProgramService.RaceChange> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceStatus", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    public enum RaceStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Post = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Final = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Locked = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnCancel = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnOfficial = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Begin = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pool", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class Pool : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string PoolIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoolNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoolNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoolRacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RaceListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnorderedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CombineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QuickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WheelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PowerBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KeyWheelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KeyBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> SingleBetMinimumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MultipleBetMinimumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WagerMinimumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MaximumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParlayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProbablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WBMaximumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultipleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SegmentedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StraightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FractionalMinimumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<USRaceList.ProgramService.ExchangeWagers> ExchangeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PoolId {
            get {
                return this.PoolIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PoolIdField, value) != true)) {
                    this.PoolIdField = value;
                    this.RaisePropertyChanged("PoolId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int PoolNumber {
            get {
                return this.PoolNumberField;
            }
            set {
                if ((this.PoolNumberField.Equals(value) != true)) {
                    this.PoolNumberField = value;
                    this.RaisePropertyChanged("PoolNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string PoolName {
            get {
                return this.PoolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PoolNameField, value) != true)) {
                    this.PoolNameField = value;
                    this.RaisePropertyChanged("PoolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public int PoolRaces {
            get {
                return this.PoolRacesField;
            }
            set {
                if ((this.PoolRacesField.Equals(value) != true)) {
                    this.PoolRacesField = value;
                    this.RaisePropertyChanged("PoolRaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string RaceList {
            get {
                return this.RaceListField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceListField, value) != true)) {
                    this.RaceListField = value;
                    this.RaisePropertyChanged("RaceList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public int Legs {
            get {
                return this.LegsField;
            }
            set {
                if ((this.LegsField.Equals(value) != true)) {
                    this.LegsField = value;
                    this.RaisePropertyChanged("Legs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public bool Unordered {
            get {
                return this.UnorderedField;
            }
            set {
                if ((this.UnorderedField.Equals(value) != true)) {
                    this.UnorderedField = value;
                    this.RaisePropertyChanged("Unordered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public int Combine {
            get {
                return this.CombineField;
            }
            set {
                if ((this.CombineField.Equals(value) != true)) {
                    this.CombineField = value;
                    this.RaisePropertyChanged("Combine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public bool Quick {
            get {
                return this.QuickField;
            }
            set {
                if ((this.QuickField.Equals(value) != true)) {
                    this.QuickField = value;
                    this.RaisePropertyChanged("Quick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public bool String {
            get {
                return this.StringField;
            }
            set {
                if ((this.StringField.Equals(value) != true)) {
                    this.StringField = value;
                    this.RaisePropertyChanged("String");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public bool Wheel {
            get {
                return this.WheelField;
            }
            set {
                if ((this.WheelField.Equals(value) != true)) {
                    this.WheelField = value;
                    this.RaisePropertyChanged("Wheel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public bool Box {
            get {
                return this.BoxField;
            }
            set {
                if ((this.BoxField.Equals(value) != true)) {
                    this.BoxField = value;
                    this.RaisePropertyChanged("Box");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public bool PowerBox {
            get {
                return this.PowerBoxField;
            }
            set {
                if ((this.PowerBoxField.Equals(value) != true)) {
                    this.PowerBoxField = value;
                    this.RaisePropertyChanged("PowerBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public bool Leading {
            get {
                return this.LeadingField;
            }
            set {
                if ((this.LeadingField.Equals(value) != true)) {
                    this.LeadingField = value;
                    this.RaisePropertyChanged("Leading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public bool KeyWheel {
            get {
                return this.KeyWheelField;
            }
            set {
                if ((this.KeyWheelField.Equals(value) != true)) {
                    this.KeyWheelField = value;
                    this.RaisePropertyChanged("KeyWheel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public bool KeyBox {
            get {
                return this.KeyBoxField;
            }
            set {
                if ((this.KeyBoxField.Equals(value) != true)) {
                    this.KeyBoxField = value;
                    this.RaisePropertyChanged("KeyBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public System.Nullable<decimal> SingleBetMinimum {
            get {
                return this.SingleBetMinimumField;
            }
            set {
                if ((this.SingleBetMinimumField.Equals(value) != true)) {
                    this.SingleBetMinimumField = value;
                    this.RaisePropertyChanged("SingleBetMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public System.Nullable<decimal> MultipleBetMinimum {
            get {
                return this.MultipleBetMinimumField;
            }
            set {
                if ((this.MultipleBetMinimumField.Equals(value) != true)) {
                    this.MultipleBetMinimumField = value;
                    this.RaisePropertyChanged("MultipleBetMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public System.Nullable<decimal> WagerMinimum {
            get {
                return this.WagerMinimumField;
            }
            set {
                if ((this.WagerMinimumField.Equals(value) != true)) {
                    this.WagerMinimumField = value;
                    this.RaisePropertyChanged("WagerMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public System.Nullable<decimal> Maximum {
            get {
                return this.MaximumField;
            }
            set {
                if ((this.MaximumField.Equals(value) != true)) {
                    this.MaximumField = value;
                    this.RaisePropertyChanged("Maximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=20)]
        public bool Parlay {
            get {
                return this.ParlayField;
            }
            set {
                if ((this.ParlayField.Equals(value) != true)) {
                    this.ParlayField = value;
                    this.RaisePropertyChanged("Parlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public bool Probables {
            get {
                return this.ProbablesField;
            }
            set {
                if ((this.ProbablesField.Equals(value) != true)) {
                    this.ProbablesField = value;
                    this.RaisePropertyChanged("Probables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=22)]
        public System.Nullable<decimal> WBMaximum {
            get {
                return this.WBMaximumField;
            }
            set {
                if ((this.WBMaximumField.Equals(value) != true)) {
                    this.WBMaximumField = value;
                    this.RaisePropertyChanged("WBMaximum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public bool Multiple {
            get {
                return this.MultipleField;
            }
            set {
                if ((this.MultipleField.Equals(value) != true)) {
                    this.MultipleField = value;
                    this.RaisePropertyChanged("Multiple");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=24)]
        public bool Auto {
            get {
                return this.AutoField;
            }
            set {
                if ((this.AutoField.Equals(value) != true)) {
                    this.AutoField = value;
                    this.RaisePropertyChanged("Auto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=25)]
        public bool Segmented {
            get {
                return this.SegmentedField;
            }
            set {
                if ((this.SegmentedField.Equals(value) != true)) {
                    this.SegmentedField = value;
                    this.RaisePropertyChanged("Segmented");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=26)]
        public bool Straight {
            get {
                return this.StraightField;
            }
            set {
                if ((this.StraightField.Equals(value) != true)) {
                    this.StraightField = value;
                    this.RaisePropertyChanged("Straight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=27)]
        public System.Nullable<decimal> FractionalMinimum {
            get {
                return this.FractionalMinimumField;
            }
            set {
                if ((this.FractionalMinimumField.Equals(value) != true)) {
                    this.FractionalMinimumField = value;
                    this.RaisePropertyChanged("FractionalMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=28)]
        public System.Nullable<USRaceList.ProgramService.ExchangeWagers> Exchange {
            get {
                return this.ExchangeField;
            }
            set {
                if ((this.ExchangeField.Equals(value) != true)) {
                    this.ExchangeField = value;
                    this.RaisePropertyChanged("Exchange");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeWagers", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    public enum ExchangeWagers : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cash = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exchange = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Runner", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class Runner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int RunnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.Entries EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScratchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OddsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RunnerId {
            get {
                return this.RunnerIdField;
            }
            set {
                if ((this.RunnerIdField.Equals(value) != true)) {
                    this.RunnerIdField = value;
                    this.RaisePropertyChanged("RunnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public USRaceList.ProgramService.Entries Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public bool Scratch {
            get {
                return this.ScratchField;
            }
            set {
                if ((this.ScratchField.Equals(value) != true)) {
                    this.ScratchField = value;
                    this.RaisePropertyChanged("Scratch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Odds {
            get {
                return this.OddsField;
            }
            set {
                if ((object.ReferenceEquals(this.OddsField, value) != true)) {
                    this.OddsField = value;
                    this.RaisePropertyChanged("Odds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Entries", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ItemName="Entry")]
    [System.SerializableAttribute()]
    public class Entries : System.Collections.Generic.List<USRaceList.ProgramService.Entry> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entry", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class Entry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScratchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JockeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.EntryChanges EntryChangesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EntryId {
            get {
                return this.EntryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryIdField, value) != true)) {
                    this.EntryIdField = value;
                    this.RaisePropertyChanged("EntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Scratch {
            get {
                return this.ScratchField;
            }
            set {
                if ((this.ScratchField.Equals(value) != true)) {
                    this.ScratchField = value;
                    this.RaisePropertyChanged("Scratch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Jockey {
            get {
                return this.JockeyField;
            }
            set {
                if ((object.ReferenceEquals(this.JockeyField, value) != true)) {
                    this.JockeyField = value;
                    this.RaisePropertyChanged("Jockey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Trainer {
            get {
                return this.TrainerField;
            }
            set {
                if ((object.ReferenceEquals(this.TrainerField, value) != true)) {
                    this.TrainerField = value;
                    this.RaisePropertyChanged("Trainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Medication {
            get {
                return this.MedicationField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicationField, value) != true)) {
                    this.MedicationField = value;
                    this.RaisePropertyChanged("Medication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public USRaceList.ProgramService.EntryChanges EntryChanges {
            get {
                return this.EntryChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryChangesField, value) != true)) {
                    this.EntryChangesField = value;
                    this.RaisePropertyChanged("EntryChanges");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EntryChanges", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ItemName="Change")]
    [System.SerializableAttribute()]
    public class EntryChanges : System.Collections.Generic.List<USRaceList.ProgramService.EntryChange> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryChange", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class EntryChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MedicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool JockeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Name {
            get {
                return this.NameField;
            }
            set {
                if ((this.NameField.Equals(value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public bool Medication {
            get {
                return this.MedicationField;
            }
            set {
                if ((this.MedicationField.Equals(value) != true)) {
                    this.MedicationField = value;
                    this.RaisePropertyChanged("Medication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool Jockey {
            get {
                return this.JockeyField;
            }
            set {
                if ((this.JockeyField.Equals(value) != true)) {
                    this.JockeyField = value;
                    this.RaisePropertyChanged("Jockey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public bool Trainer {
            get {
                return this.TrainerField;
            }
            set {
                if ((this.TrainerField.Equals(value) != true)) {
                    this.TrainerField = value;
                    this.RaisePropertyChanged("Trainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public bool Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((this.OwnerField.Equals(value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Other {
            get {
                return this.OtherField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherField, value) != true)) {
                    this.OtherField = value;
                    this.RaisePropertyChanged("Other");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceChange", Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program")]
    [System.SerializableAttribute()]
    public partial class RaceChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RaceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PurseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BreedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SurfaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool RaceType {
            get {
                return this.RaceTypeField;
            }
            set {
                if ((this.RaceTypeField.Equals(value) != true)) {
                    this.RaceTypeField = value;
                    this.RaisePropertyChanged("RaceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public bool Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public bool Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public bool Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public bool Purse {
            get {
                return this.PurseField;
            }
            set {
                if ((this.PurseField.Equals(value) != true)) {
                    this.PurseField = value;
                    this.RaisePropertyChanged("Purse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public bool Claim {
            get {
                return this.ClaimField;
            }
            set {
                if ((this.ClaimField.Equals(value) != true)) {
                    this.ClaimField = value;
                    this.RaisePropertyChanged("Claim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public bool Breed {
            get {
                return this.BreedField;
            }
            set {
                if ((this.BreedField.Equals(value) != true)) {
                    this.BreedField = value;
                    this.RaisePropertyChanged("Breed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public bool Surface {
            get {
                return this.SurfaceField;
            }
            set {
                if ((this.SurfaceField.Equals(value) != true)) {
                    this.SurfaceField = value;
                    this.RaisePropertyChanged("Surface");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToteLinkFault", Namespace="http://schema.unitedtote.com/ToteLink/Faults/2008/10")]
    [System.SerializableAttribute()]
    public partial class ToteLinkFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
    [System.SerializableAttribute()]
    public partial class ValidationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private USRaceList.ProgramService.ValidationDetail[] DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public USRaceList.ProgramService.ValidationDetail[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationDetail", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Practices.EnterpriseLibrary.Val" +
        "idation.Integration.WCF")]
    [System.SerializableAttribute()]
    public partial class ValidationDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schema.unitedtote.com/ToteLink/2008/06/Program", ConfigurationName="ProgramService.Program")]
    public interface Program {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://schema.unitedtote.com/ToteLink/2008/06/Common) of message KeepaliveRequest does not match the default value (http://schema.unitedtote.com/ToteLink/2008/06/Program)
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Common/Keepalive/Keepalive", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Common/Keepalive/KeepaliveResponse")]
        USRaceList.ProgramService.KeepaliveResponse Keepalive(USRaceList.ProgramService.KeepaliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEvents", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEventsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.ProgramService.ToteLinkFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEventsToteFaultF" +
            "ault", Name="ToteLinkFault", Namespace="http://schema.unitedtote.com/ToteLink/Faults/2008/10")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.ProgramService.ValidationFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEventsValidation" +
            "FaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="EventsResponse")]
        USRaceList.ProgramService.EventsResponse GetEvents(USRaceList.ProgramService.EventsRequest EventsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEventDetail", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEventDetailRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.ProgramService.ToteLinkFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEventDetailToteF" +
            "aultFault", Name="ToteLinkFault", Namespace="http://schema.unitedtote.com/ToteLink/Faults/2008/10")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.ProgramService.ValidationFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetEventDetailValid" +
            "ationFaultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="EventsResponse")]
        USRaceList.ProgramService.EventDetailResponse GetEventDetail(USRaceList.ProgramService.EventDetailRequest EventsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetRace", ReplyAction="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetRaceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.ProgramService.ToteLinkFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetRaceToteFaultFau" +
            "lt", Name="ToteLinkFault", Namespace="http://schema.unitedtote.com/ToteLink/Faults/2008/10")]
        [System.ServiceModel.FaultContractAttribute(typeof(USRaceList.ProgramService.ValidationFault), Action="http://schema.unitedtote.com/ToteLink/2008/06/Program/Program/GetRaceValidationFa" +
            "ultFault", Name="ValidationFault", Namespace="http://www.microsoft.com/practices/EnterpriseLibrary/2007/01/wcf/validation")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="RaceResponse")]
        USRaceList.ProgramService.RaceResponse GetRace(USRaceList.ProgramService.RaceRequest RaceRequest);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Keepalive", WrapperNamespace="http://schema.unitedtote.com/ToteLink/2008/06/Common", IsWrapped=true)]
    public partial class KeepaliveRequest {
        
        public KeepaliveRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="KeepaliveResponse", WrapperNamespace="http://schema.unitedtote.com/ToteLink/2008/06/Common", IsWrapped=true)]
    public partial class KeepaliveResponse {
        
        public KeepaliveResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProgramChannel : USRaceList.ProgramService.Program, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProgramClient : System.ServiceModel.ClientBase<USRaceList.ProgramService.Program>, USRaceList.ProgramService.Program {
        
        public ProgramClient() {
        }
        
        public ProgramClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProgramClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProgramClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProgramClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        USRaceList.ProgramService.KeepaliveResponse USRaceList.ProgramService.Program.Keepalive(USRaceList.ProgramService.KeepaliveRequest request) {
            return base.Channel.Keepalive(request);
        }
        
        public void Keepalive() {
            USRaceList.ProgramService.KeepaliveRequest inValue = new USRaceList.ProgramService.KeepaliveRequest();
            USRaceList.ProgramService.KeepaliveResponse retVal = ((USRaceList.ProgramService.Program)(this)).Keepalive(inValue);
        }
        
        public USRaceList.ProgramService.EventsResponse GetEvents(USRaceList.ProgramService.EventsRequest EventsRequest) {
            return base.Channel.GetEvents(EventsRequest);
        }
        
        public USRaceList.ProgramService.EventDetailResponse GetEventDetail(USRaceList.ProgramService.EventDetailRequest EventsRequest) {
            return base.Channel.GetEventDetail(EventsRequest);
        }
        
        public USRaceList.ProgramService.RaceResponse GetRace(USRaceList.ProgramService.RaceRequest RaceRequest) {
            return base.Channel.GetRace(RaceRequest);
        }
    }
}
